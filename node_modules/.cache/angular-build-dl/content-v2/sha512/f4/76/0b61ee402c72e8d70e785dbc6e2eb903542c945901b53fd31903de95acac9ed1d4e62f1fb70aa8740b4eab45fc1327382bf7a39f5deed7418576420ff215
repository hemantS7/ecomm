{"version":3,"sources":["webpack:///src/app/admin/customers/customer-dialog/customer-dialog.component.html","webpack:///src/app/admin/customers/customers.component.html","webpack:///src/app/admin/customers/customer-dialog/customer-dialog.component.scss","webpack:///src/app/admin/customers/customer-dialog/customer-dialog.component.ts","webpack:///src/app/admin/customers/customers.component.scss","webpack:///src/app/admin/customers/customers.component.ts","webpack:///src/app/admin/customers/customers.module.ts","webpack:///src/app/admin/customers/customers.ts"],"names":["CustomerDialogComponent","dialogRef","data","fb","form","group","id","username","required","email","firstName","lastName","middleName","storeId","walletBalance","revenue","billing","company","phone","country","city","state","zip","address","customer","patchValue","console","log","value","valid","close","o1","o2","name","code","selector","template","CustomersComponent","appService","dialog","appSettings","customers","stores","countries","count","settings","getCountries","event","page","window","scrollTo","open","panelClass","autoFocus","direction","rtl","afterClosed","subscribe","index","findIndex","x","last_customer","length","push","maxWidth","title","message","dialogResult","indexOf","splice","routes","path","component","pathMatch","CustomersModule","declarations","imports","forChild"],"mappings":"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","file":"customers-customers-module-es5.js","sourcesContent":["export default \"<h1 mat-dialog-title>Customer</h1>\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\">\\n    <div mat-dialog-content> \\n        <mat-tab-group class=\\\"tab-content-wrapped\\\">\\n            <mat-tab label=\\\"General Info\\\"> \\n                <div fxLayout=\\\"row wrap\\\" class=\\\"mt-2\\\">\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>First name</mat-label>\\n                            <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\n                            <mat-error *ngIf=\\\"form.controls.firstName.errors?.required\\\">First name is required</mat-error>   \\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Last name</mat-label>\\n                            <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\n                            <mat-error *ngIf=\\\"form.controls.lastName.errors?.required\\\">Last name is required</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Middle Name/Initial</mat-label>\\n                            <input matInput placeholder=\\\"Middle Name/Initial\\\" formControlName=\\\"middleName\\\">\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Username</mat-label>\\n                            <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" required> \\n                            <mat-error *ngIf=\\\"form.controls.username.errors?.required\\\">Username is required</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Email</mat-label>\\n                            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\"> \\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Store</mat-label>\\n                            <mat-select formControlName=\\\"storeId\\\">\\n                                <mat-option [value]=\\\"\\\">-</mat-option>\\n                                <mat-option *ngFor=\\\"let store of data.stores\\\" [value]=\\\"store.id\\\">\\n                                    <span>{{store.name}}</span>\\n                                </mat-option>\\n                            </mat-select> \\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Wallet Balance ($)</mat-label>\\n                            <input matInput formControlName=\\\"walletBalance\\\">\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Revenue ($)</mat-label>\\n                            <input matInput formControlName=\\\"revenue\\\">\\n                        </mat-form-field>\\n                    </div>\\n                </div>  \\n            </mat-tab>\\n            <mat-tab label=\\\"Billing\\\" formGroupName=\\\"billing\\\">\\n                <div fxLayout=\\\"row wrap\\\" class=\\\"mt-2\\\">\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>First name</mat-label>\\n                          <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].firstName.errors?.required\\\">First name is required</mat-error>   \\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Last name</mat-label>\\n                          <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].lastName.errors?.required\\\">Last name is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Middle Name/Initial</mat-label>\\n                          <input matInput placeholder=\\\"Middle Name/Initial\\\" formControlName=\\\"middleName\\\">\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Company</mat-label>\\n                          <input matInput placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Email</mat-label>\\n                          <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].email.errors?.required\\\">Email is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Phone</mat-label>\\n                          <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].phone.errors?.required\\\">Phone is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Country</mat-label>\\n                            <mat-select placeholder=\\\"Country\\\" formControlName=\\\"country\\\" required [compareWith]=\\\"compareFunction\\\">\\n                                <mat-option [value]=\\\"\\\">-</mat-option>\\n                                <mat-option *ngFor=\\\"let country of data.countries\\\" [value]=\\\"country\\\">\\n                                    {{country.name}}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"form.get('billing')['controls'].country.errors?.required\\\">Country is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>City</mat-label>\\n                          <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].city.errors?.required\\\">City is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>State/Province</mat-label>\\n                          <input matInput placeholder=\\\"State/Province\\\" formControlName=\\\"state\\\">\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Zip/Postal Code</mat-label>\\n                          <input matInput placeholder=\\\"Zip/Postal Code\\\" formControlName=\\\"zip\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].zip.errors?.required\\\">Zip/Postal Code is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Address</mat-label>\\n                          <input matInput placeholder=\\\"Address (street, apartment, suite, unit etc.)\\\" formControlName=\\\"address\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].address.errors?.required\\\">Address is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n        </mat-tab-group> \\n    </div>\\n    <div mat-dialog-actions>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"w-100\\\"> \\n            <button mat-raised-button color=\\\"warn\\\" type=\\\"button\\\" mat-dialog-close>Close</button>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n        </div> \\n    </div>\\n</form>\";","export default \"<div class=\\\"p-1\\\">\\n    <mat-card class=\\\"p-0\\\"> \\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"w-100 p-2\\\">\\n            <h2>Customers List</h2>  \\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openCustomerDialog(null)\\\">Add Customer</button>\\n        </div>\\n        <mat-divider></mat-divider>\\n        <div class=\\\"mat-table admin-table\\\">\\n            <div class=\\\"mat-header-row\\\">\\n                <div class=\\\"mat-header-cell\\\">Full Name</div>\\n                <div class=\\\"mat-header-cell\\\">Username</div> \\n                <div class=\\\"mat-header-cell\\\">Email</div>\\n                <div class=\\\"mat-header-cell\\\">Store</div>\\n                <div class=\\\"mat-header-cell\\\">Wallet Balance</div>\\n                <div class=\\\"mat-header-cell\\\">Revenue</div>\\n                <div class=\\\"mat-header-cell\\\"></div>\\n            </div>\\n            <div *ngFor=\\\"let customer of customers | paginate: { itemsPerPage: count, currentPage: page }\\\" class=\\\"mat-row\\\">\\n                <div class=\\\"mat-cell\\\">{{customer.firstName}} {{customer.lastName}}</div>\\n                <div class=\\\"mat-cell\\\">{{customer.username}}</div>\\n                <div class=\\\"mat-cell\\\">{{customer.email}}</div>\\n                <div class=\\\"mat-cell\\\">{{ ( stores | filterById : customer.storeId )?.name }}</div> \\n                <div class=\\\"mat-cell\\\">${{customer.walletBalance.toFixed(2)}}</div>\\n                <div class=\\\"mat-cell\\\">${{customer.revenue.toFixed(2)}}</div>     \\n                <div class=\\\"mat-cell\\\">\\n                    <div class=\\\"p-1 actions\\\">          \\n                        <button mat-mini-fab color=\\\"primary\\\" matTooltip=\\\"Edit\\\" (click)=\\\"openCustomerDialog(customer)\\\">\\n                            <mat-icon>edit</mat-icon>\\n                        </button>\\n                        <button mat-mini-fab color=\\\"warn\\\" matTooltip=\\\"Delete\\\" class=\\\"mx-1\\\" (click)=\\\"remove(customer)\\\">\\n                            <mat-icon>delete</mat-icon>\\n                        </button>\\n                    </div>\\n                </div>      \\n            </div>\\n        </div>\\n    </mat-card>\\n\\n    <div *ngIf=\\\"customers.length > 0\\\" fxLayout=\\\"row wrap\\\">\\n        <div fxFlex=\\\"100\\\"> \\n            <mat-card class=\\\"p-0 text-center\\\">           \\n                <pagination-controls class=\\\"product-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"5\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2N1c3RvbWVycy9jdXN0b21lci1kaWFsb2cvY3VzdG9tZXItZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-customer-dialog',\n  templateUrl: './customer-dialog.component.html',\n  styleUrls: ['./customer-dialog.component.scss']\n})\nexport class CustomerDialogComponent implements OnInit {\n  public form: FormGroup;\n  constructor(public dialogRef: MatDialogRef<CustomerDialogComponent>, \n              @Inject(MAT_DIALOG_DATA) public data: any,\n              public fb: FormBuilder) { }\n\n  ngOnInit(): void {   \n    this.form = this.fb.group({\n      id: 0, \n      username: ['', Validators.required],\n      email: null,\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      middleName: null,\n      storeId: null,  \n      walletBalance: null, \n      revenue: null,\n      billing: this.fb.group({ \n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        middleName: '',\n        company: '',\n        email: ['', Validators.required],\n        phone: ['', Validators.required],\n        country: ['', Validators.required],\n        city: ['', Validators.required],\n        state: '',\n        zip: ['', Validators.required],\n        address: ['', Validators.required]\n      }) \n    }); \n\n    if(this.data.customer){\n      this.form.patchValue(this.data.customer); \n    };\n  }\n\n  public onSubmit(){\n    console.log(this.form.value);\n    if(this.form.valid){\n      this.dialogRef.close(this.form.value);\n    }\n  }\n\n  public compareFunction(o1: any, o2: any) {\n    return (o1.name == o2.name && o1.code == o2.code);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2N1c3RvbWVycy9jdXN0b21lcnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AppService } from 'src/app/app.service'; \nimport { MatDialog } from '@angular/material/dialog';\nimport { CustomerDialogComponent } from './customer-dialog/customer-dialog.component';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { customers } from './customers';\nimport { AppSettings, Settings } from 'src/app/app.settings';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\nexport class CustomersComponent implements OnInit {\n  public customers = [];\n  public stores = [\n    { id: 1, name: 'Store 1' },\n    { id: 2, name: 'Store 2' }\n  ]\n  public countries = [];\n  public page: any;\n  public count = 6;\n  public settings:Settings;\n  constructor(public appService:AppService, public dialog: MatDialog, public appSettings:AppSettings) {\n    this.settings = this.appSettings.settings;\n  }\n\n  ngOnInit(): void {\n    this.countries = this.appService.getCountries();\n    this.customers = customers; \n  }\n\n  public onPageChanged(event){\n    this.page = event; \n    window.scrollTo(0,0); \n  }\n\n  public openCustomerDialog(data:any){\n    const dialogRef = this.dialog.open(CustomerDialogComponent, {\n      data: {\n        customer: data,\n        stores: this.stores,\n        countries: this.countries\n      },\n      panelClass: ['theme-dialog'],\n      autoFocus: false,\n      direction: (this.settings.rtl) ? 'rtl' : 'ltr' \n    });\n    dialogRef.afterClosed().subscribe(customer => { \n      if(customer){    \n        const index: number = this.customers.findIndex(x => x.id == customer.id);\n        if(index !== -1){\n          this.customers[index] = customer;\n        } \n        else{ \n          let last_customer= this.customers[this.customers.length - 1]; \n          customer.id = last_customer.id + 1;\n          this.customers.push(customer);  \n        }          \n      }\n    });\n  }\n\n  public remove(customer:any){  \n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want remove this customer?\"\n      }\n    }); \n    dialogRef.afterClosed().subscribe(dialogResult => { \n      if(dialogResult){\n        const index: number = this.customers.indexOf(customer);\n        if (index !== -1) {\n          this.customers.splice(index, 1);  \n        } \n      } \n    }); \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { CustomersComponent } from './customers.component';\nimport { CustomerDialogComponent } from './customer-dialog/customer-dialog.component';\n\nexport const routes = [\n  { path: '', component: CustomersComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    CustomerDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    SharedModule,\n    NgxPaginationModule\n  ]\n})\nexport class CustomersModule { }\n","export const customers = [\r\n    { \r\n        id: 1, \r\n        username: 'bruno.v', \r\n        email: 'bruno@company.com', \r\n        firstName: 'Bruno', \r\n        lastName: 'Vespa', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 5255, \r\n        revenue: 3450,\r\n        billing: { \r\n            firstName: 'Bruno', \r\n            lastName: 'Vespa', \r\n            middleName: '',\r\n            company: 'Company 1', \r\n            email: 'bruno@company.com',\r\n            phone: '(415) 231-0332',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 2, \r\n        username: 'andy.79', \r\n        email: 'warhol@gmail.com', \r\n        firstName: 'Andy', \r\n        lastName: 'Warhol', \r\n        middleName: '',\r\n        storeId: 1,  \r\n        walletBalance: 8055, \r\n        revenue: 7200,\r\n        billing: { \r\n            firstName: 'Andy', \r\n            lastName: 'Warhol', \r\n            middleName: '',\r\n            company: 'Company 1', \r\n            email: 'warhol@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 3, \r\n        username: 'pretty', \r\n        email: 'ashley@gmail.com', \r\n        firstName: 'Ashley', \r\n        lastName: 'Ahlberg', \r\n        middleName: '',\r\n        storeId: 1,  \r\n        walletBalance: 17200, \r\n        revenue: 2200,\r\n        billing: { \r\n            firstName: 'Ashley', \r\n            lastName: 'Ahlberg', \r\n            middleName: '',\r\n            company: 'Company 5', \r\n            email: 'ashley@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 4, \r\n        username: 'julia.a', \r\n        email: 'julia@gmail.com', \r\n        firstName: 'Julia', \r\n        lastName: 'Aniston', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 9480, \r\n        revenue: 1470,\r\n        billing: { \r\n            firstName: 'Julia', \r\n            lastName: 'Aniston', \r\n            middleName: '',\r\n            company: 'Company 5', \r\n            email: 'julia@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 5, \r\n        username: 'lusia.m', \r\n        email: 'lusia@gmail.com', \r\n        firstName: 'Lusia', \r\n        lastName: 'Manuel', \r\n        middleName: '',\r\n        storeId: 1,  \r\n        walletBalance: 6200, \r\n        revenue: 3250,\r\n        billing: { \r\n            firstName: 'Lusia', \r\n            lastName: 'Manuel', \r\n            middleName: '',\r\n            company: 'Company 4', \r\n            email: 'lusia@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 6, \r\n        username: 'adam.s', \r\n        email: 'adam@gmail.com', \r\n        firstName: 'Adam', \r\n        lastName: 'Sandler', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 7580, \r\n        revenue: 2950,\r\n        billing: { \r\n            firstName: 'Adam', \r\n            lastName: 'Sandler', \r\n            middleName: '',\r\n            company: 'Company 1', \r\n            email: 'adam@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 7, \r\n        username: 'tereza.s', \r\n        email: 'tereza@gmail.com', \r\n        firstName: 'Tereza', \r\n        lastName: 'Stiles', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 5240, \r\n        revenue: 1095,\r\n        billing: { \r\n            firstName: 'Tereza', \r\n            lastName: 'Stiles', \r\n            middleName: '',\r\n            company: 'Company 3', \r\n            email: 'tereza@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 8, \r\n        username: 'michael.b', \r\n        email: 'michael@gmail.com', \r\n        firstName: 'Michael', \r\n        lastName: 'Blair', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 7340, \r\n        revenue: 4580,\r\n        billing: { \r\n            firstName: 'Michael', \r\n            lastName: 'Blair', \r\n            middleName: '',\r\n            company: 'Company 3', \r\n            email: 'michael@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    }\r\n]"]}