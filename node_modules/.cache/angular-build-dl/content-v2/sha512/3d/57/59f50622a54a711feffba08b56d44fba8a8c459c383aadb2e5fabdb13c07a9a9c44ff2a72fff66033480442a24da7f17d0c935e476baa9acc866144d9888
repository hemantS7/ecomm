{"version":3,"sources":["webpack:///src/app/pages/account/account.component.html","webpack:///src/app/pages/account/addresses/addresses.component.html","webpack:///src/app/pages/account/dashboard/dashboard.component.html","webpack:///src/app/pages/account/information/information.component.html","webpack:///src/app/pages/account/orders/orders.component.html","webpack:///src/app/pages/account/account.component.scss","webpack:///src/app/pages/account/account.component.ts","webpack:///src/app/pages/account/account.module.ts","webpack:///src/app/pages/account/addresses/addresses.component.scss","webpack:///src/app/pages/account/addresses/addresses.component.ts","webpack:///src/app/pages/account/dashboard/dashboard.component.scss","webpack:///src/app/pages/account/dashboard/dashboard.component.ts","webpack:///src/app/pages/account/information/information.component.scss","webpack:///src/app/pages/account/information/information.component.ts","webpack:///src/app/pages/account/orders/orders.component.scss","webpack:///src/app/pages/account/orders/orders.component.ts"],"names":["AccountComponent","router","sidenavOpen","links","name","href","icon","window","innerWidth","events","subscribe","event","sidenav","close","selector","template","routes","path","component","children","redirectTo","pathMatch","data","breadcrumb","AccountModule","imports","forChild","declarations","AddressesComponent","appService","formBuilder","snackBar","countries","getCountries","billingForm","group","required","shippingForm","values","valid","open","panelClass","verticalPosition","duration","DashboardComponent","InformationComponent","infoForm","compose","minLength","passwordForm","validator","OrdersComponent","orders","number","date","status","total","invoice"],"mappings":"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","file":"pages-account-account-module-es5.js","sourcesContent":["export default \"<mat-sidenav-container>\\r\\n    <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"account-sidenav\\\" perfectScrollbar>\\r\\n        <mat-nav-list class=\\\"mat-elevation-z1 h-100\\\">\\r\\n            <mat-list-item *ngFor=\\\"let link of links\\\">              \\r\\n                <mat-icon matListIcon class=\\\"mat-icon-sm\\\">{{link.icon}}</mat-icon>\\r\\n                <a matLine [routerLink]=\\\"link.href\\\" routerLinkActive=\\\"horizontal-active-link\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">{{ link.name }}</a>\\r\\n            </mat-list-item>\\r\\n        </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content class=\\\"account-content\\\" ngClass.gt-sm=\\\"p-left\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"header-row mat-elevation-z1 text-muted\\\">\\r\\n            <button *ngIf=\\\"!sidenavOpen\\\" mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                <mat-icon>more_vert</mat-icon>\\r\\n            </button>\\r\\n            <h3>My Account</h3>\\r\\n        </div>\\r\\n        <div class=\\\"account-wrapper mat-elevation-z1\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>  \\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\";","export default \"<mat-tab-group >\\r\\n    <mat-tab label=\\\"Billing address\\\">\\r\\n        <div class=\\\"p-2 mt-1\\\">\\r\\n            <form [formGroup]=\\\"billingForm\\\" (ngSubmit)=\\\"onBillingFormSubmit(billingForm.value)\\\">     \\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.firstName.errors?.required\\\">First name is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.lastName.errors?.required\\\">Last name is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Middle Name/Initial\\\" formControlName=\\\"middleName\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.phone.errors?.required\\\">Phone is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                    <mat-select placeholder=\\\"Country\\\" formControlName=\\\"country\\\" required>\\r\\n                      <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country\\\">\\r\\n                          {{country.name}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-error *ngIf=\\\"billingForm.controls.country.errors?.required\\\">Country is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.city.errors?.required\\\">City is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"State/Province\\\" formControlName=\\\"state\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Zip/Postal Code\\\" formControlName=\\\"zip\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.zip.errors?.required\\\">Zip/Postal Code is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Address (street, apartment, suite, unit etc.)\\\" formControlName=\\\"address\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.address.errors?.required\\\">Address is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onBillingFormSubmit(billingForm.value)\\\">Save</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Shipping address\\\">\\r\\n        <div class=\\\"p-2 mt-1\\\">\\r\\n            <form [formGroup]=\\\"shippingForm\\\" (ngSubmit)=\\\"onShippingFormSubmit(shippingForm.value)\\\">     \\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.firstName.errors?.required\\\">First name is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.lastName.errors?.required\\\">Last name is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Middle Name/Initial\\\" formControlName=\\\"middleName\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.phone.errors?.required\\\">Phone is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                    <mat-select placeholder=\\\"Country\\\" formControlName=\\\"country\\\" required>\\r\\n                      <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country\\\">\\r\\n                          {{country.name}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-error *ngIf=\\\"shippingForm.controls.country.errors?.required\\\">Country is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.city.errors?.required\\\">City is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"State/Province\\\" formControlName=\\\"state\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Zip/Postal Code\\\" formControlName=\\\"zip\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.zip.errors?.required\\\">Zip/Postal Code is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Address (street, apartment, suite, unit etc.)\\\" formControlName=\\\"address\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.address.errors?.required\\\">Address is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onShippingFormSubmit(shippingForm.value)\\\">Save</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\\r\\n\";","export default \"<p class=\\\"text-muted\\\">Hello, <b>Emilio Verdines!</b>\\r\\nFrom your My Account Dashboard you have the ability to view a snapshot of your recent account activity and update your account information. Select a link below to view or edit information.</p>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" class=\\\"flex-wrapper\\\">\\r\\n    <div fxFlex=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"100\\\" class=\\\"col\\\">\\r\\n        <mat-card class=\\\"p-0\\\">\\r\\n          <mat-card-header class=\\\"p-1 account-card-title\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n              <mat-card-title class=\\\"m-0\\\"><h3>Account Information</h3></mat-card-title>\\r\\n              <a mat-icon-button routerLink=\\\"/account/information\\\"><mat-icon class=\\\"text-muted\\\">edit</mat-icon></a>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"divider\\\"></div>\\r\\n          <mat-card-content class=\\\"p-2 text-muted account-card-content\\\">\\r\\n              <p>Emilio Verdines</p>\\r\\n              <p>emilio.verdines@gmail.com</p>\\r\\n              <p><a routerLink=\\\"/account/information\\\" class=\\\"primary-text\\\">Change password</a></p>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"100\\\" class=\\\"col\\\">\\r\\n        <mat-card class=\\\"p-0\\\">\\r\\n          <mat-card-header class=\\\"p-1 account-card-title\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n              <mat-card-title class=\\\"m-0\\\"><h3>Addresses</h3></mat-card-title>\\r\\n              <a mat-icon-button routerLink=\\\"/account/addresses\\\"><mat-icon class=\\\"text-muted\\\">edit</mat-icon></a>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"divider\\\"></div>\\r\\n          <mat-card-content class=\\\"p-2 text-muted account-card-content\\\">\\r\\n            <p>Billing address</p>\\r\\n            <p>Shipping address</p>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"33.3\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\" class=\\\"col\\\">\\r\\n        <mat-card class=\\\"p-0\\\">\\r\\n          <mat-card-header class=\\\"p-1 account-card-title\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n              <mat-card-title class=\\\"m-0\\\"><h3>Orders</h3></mat-card-title>\\r\\n              <a mat-icon-button routerLink=\\\"/account/orders\\\"><mat-icon class=\\\"text-muted\\\">edit</mat-icon></a>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"divider\\\"></div>\\r\\n          <mat-card-content class=\\\"p-2 text-muted account-card-content\\\">\\r\\n            <p class=\\\"\\\">Completed</p>\\r\\n            <mat-progress-bar value=\\\"75\\\" color=\\\"primary\\\"></mat-progress-bar>\\r\\n            <p class=\\\"mt-1\\\">Processing</p>\\r\\n            <mat-progress-bar value=\\\"25\\\" color=\\\"accent\\\"></mat-progress-bar>\\r\\n            <p class=\\\"mt-1\\\">On hold</p>\\r\\n            <mat-progress-bar value=\\\"65\\\" color=\\\"warn\\\"></mat-progress-bar>\\r\\n            <p class=\\\"mt-1\\\">Refunded</p>\\r\\n            <mat-progress-bar value=\\\"25\\\" color=\\\"primary\\\"></mat-progress-bar>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n        <h2 class=\\\"text-muted text-center\\\">Account details</h2>\\r\\n        <form [formGroup]=\\\"infoForm\\\" (ngSubmit)=\\\"onInfoFormSubmit(infoForm.value)\\\">\\r\\n            <mat-form-field class=\\\"w-100 mt-2\\\">\\r\\n                <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" required>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.firstName.errors?.required\\\">First Name is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.firstName.hasError('minlength')\\\">First Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"w-100 mt-1\\\">\\r\\n                <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\" required>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.lastName.errors?.required\\\">Last Name is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.lastName.hasError('minlength')\\\">Last Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"w-100 mt-1\\\">\\r\\n                <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onInfoFormSubmit(infoForm.value)\\\">Save</button>\\r\\n            </div> \\r\\n        </form>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n        <h2 class=\\\"text-muted text-center\\\">Password change</h2>\\r\\n        <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"onPasswordFormSubmit(passwordForm.value)\\\">            \\r\\n            <mat-form-field class=\\\"w-100 mt-2\\\">\\r\\n                <input matInput placeholder=\\\"Current Password\\\" formControlName=\\\"currentPassword\\\" type=\\\"password\\\" minlength=\\\"6\\\" required>\\r\\n                <mat-error *ngIf=\\\"passwordForm.controls.currentPassword.errors?.required\\\">Current Password is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"passwordForm.controls.currentPassword.hasError('minlength')\\\">Current Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"w-100 mt-1\\\">\\r\\n                <input matInput placeholder=\\\"New Password\\\" formControlName=\\\"newPassword\\\" type=\\\"password\\\" minlength=\\\"6\\\" required>\\r\\n                <mat-error *ngIf=\\\"passwordForm.controls.newPassword.errors?.required\\\">New Password is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"passwordForm.controls.newPassword.hasError('minlength')\\\">New Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n            </mat-form-field> \\r\\n            <mat-form-field class=\\\"w-100 mt-1\\\">\\r\\n              <input matInput placeholder=\\\"Confirm New Password\\\" formControlName=\\\"confirmNewPassword\\\" type=\\\"password\\\" required>\\r\\n              <mat-error *ngIf=\\\"passwordForm.controls.confirmNewPassword.errors?.required\\\">Confirm New Password is required</mat-error>\\r\\n              <mat-error *ngIf=\\\"passwordForm.controls.confirmNewPassword.hasError('mismatchedPasswords')\\\">Passwords do not match</mat-error>\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onPasswordFormSubmit(passwordForm.value)\\\">Change</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div> \\r\\n\";","export default \"<div class=\\\"mat-table orders-table\\\">\\r\\n    <div class=\\\"mat-header-row\\\">\\r\\n      <div class=\\\"mat-header-cell\\\">Order</div>\\r\\n      <div class=\\\"mat-header-cell\\\">Date</div>\\r\\n      <div class=\\\"mat-header-cell\\\">Status</div>\\r\\n      <div class=\\\"mat-header-cell\\\">Total</div>\\r\\n      <div class=\\\"mat-header-cell\\\"></div>\\r\\n    </div>\\r\\n    <div *ngFor=\\\"let order of orders\\\" class=\\\"mat-row\\\">\\r\\n      <div class=\\\"mat-cell\\\"><span class=\\\"order\\\">{{order.number}}</span></div>\\r\\n      <div class=\\\"mat-cell\\\">{{order.date}}</div>\\r\\n      <div class=\\\"mat-cell\\\">{{order.status}}</div>\\r\\n      <div class=\\\"mat-cell\\\">{{order.total}}</div>     \\r\\n      <div class=\\\"mat-cell\\\">\\r\\n        <div class=\\\"p-1 actions\\\">          \\r\\n          <button mat-mini-fab color=\\\"primary\\\" matTooltip=\\\"View\\\">\\r\\n              <mat-icon>remove_red_eye</mat-icon>\\r\\n          </button>\\r\\n          <button *ngIf=\\\"order.invoice\\\" mat-mini-fab color=\\\"warn\\\" matTooltip=\\\"View invoice\\\" class=\\\"btn-invoice\\\">\\r\\n              <mat-icon>receipt</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>      \\r\\n    </div>\\r\\n  </div>\";","export default \".account-sidenav {\\n  width: 280px;\\n  padding: 2px;\\n}\\n.account-sidenav .mat-nav-list {\\n  box-sizing: border-box;\\n}\\n.account-sidenav .mat-nav-list .mat-list-item {\\n  height: 36px;\\n  font-size: 14px;\\n}\\n.account-content {\\n  min-height: 400px;\\n  padding: 2px;\\n  overflow: hidden;\\n}\\n.account-content.p-left {\\n  padding-left: 16px;\\n}\\n.account-content .header-row {\\n  background: #fff;\\n  padding: 0 16px;\\n  height: 56px;\\n}\\n.account-content .account-wrapper {\\n  margin-top: 16px;\\n  padding: 16px;\\n  background: #fff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLFlBQUE7QUFDSjtBQUFJO0VBQ0ksc0JBQUE7QUFFUjtBQURRO0VBQ0ksWUFBQTtFQUNBLGVBQUE7QUFHWjtBQUNBO0VBQ0ksaUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUFFSjtBQURJO0VBQ0ksa0JBQUE7QUFHUjtBQURJO0VBQ0ksZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtBQUdSO0FBREk7RUFDSSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQUdSIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjY291bnQtc2lkZW5hdntcclxuICAgIHdpZHRoOiAyODBweDtcclxuICAgIHBhZGRpbmc6IDJweDtcclxuICAgIC5tYXQtbmF2LWxpc3R7XHJcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgICAgICAubWF0LWxpc3QtaXRlbXtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi5hY2NvdW50LWNvbnRlbnR7XHJcbiAgICBtaW4taGVpZ2h0OiA0MDBweDtcclxuICAgIHBhZGRpbmc6IDJweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAmLnAtbGVmdHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE2cHg7XHJcbiAgICB9XHJcbiAgICAuaGVhZGVyLXJvd3tcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMTZweDtcclxuICAgICAgICBoZWlnaHQ6IDU2cHg7XHJcbiAgICB9XHJcbiAgICAuYWNjb3VudC13cmFwcGVye1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDE2cHg7XHJcbiAgICAgICAgcGFkZGluZzogMTZweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgfVxyXG59XHJcblxyXG4iXX0= */\";","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  @ViewChild('sidenav', { static: true }) sidenav: any;\r\n  public sidenavOpen:boolean = true;\r\n  public links = [\r\n    { name: 'Account Dashboard', href: 'dashboard', icon: 'dashboard' },\r\n    { name: 'Account Information', href: 'information', icon: 'info' },\r\n    { name: 'Addresses', href: 'addresses', icon: 'location_on' },\r\n    { name: 'Order History', href: 'orders', icon: 'add_shopping_cart' },  \r\n    { name: 'Logout', href: '/sign-in', icon: 'power_settings_new' },    \r\n  ];\r\n  constructor(public router:Router) { }\r\n\r\n  ngOnInit() {\r\n    if(window.innerWidth < 960){\r\n      this.sidenavOpen = false;\r\n    };\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) { \r\n        if(window.innerWidth < 960){\r\n          this.sidenav.close(); \r\n        }\r\n      }                \r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AccountComponent } from './account.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { InformationComponent } from './information/information.component';\r\nimport { AddressesComponent } from './addresses/addresses.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\n\r\nexport const routes = [\r\n  { \r\n      path: '', \r\n      component: AccountComponent, children: [\r\n          { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n          { path: 'dashboard', component: DashboardComponent, data: {  breadcrumb: 'Dashboard' } },\r\n          { path: 'information', component: InformationComponent, data: {  breadcrumb: 'Information' } },\r\n          { path: 'addresses', component: AddressesComponent, data: {  breadcrumb: 'Addresses' } },\r\n          { path: 'orders', component: OrdersComponent, data: {  breadcrumb: 'Orders' } }\r\n      ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    AccountComponent,\r\n    DashboardComponent,\r\n    InformationComponent,\r\n    AddressesComponent,\r\n    OrdersComponent\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvYWRkcmVzc2VzL2FkZHJlc3Nlcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AppService } from '../../../app.service';\r\n\r\n@Component({\r\n  selector: 'app-addresses',\r\n  templateUrl: './addresses.component.html',\r\n  styleUrls: ['./addresses.component.scss']\r\n})\r\nexport class AddressesComponent implements OnInit {\r\n  billingForm: FormGroup;\r\n  shippingForm: FormGroup;\r\n  countries = [];\r\n  constructor(public appService:AppService, public formBuilder: FormBuilder, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.countries = this.appService.getCountries();\r\n    this.billingForm = this.formBuilder.group({\r\n      'firstName': ['', Validators.required],\r\n      'lastName': ['', Validators.required],\r\n      'middleName': '',\r\n      'company': '',\r\n      'email': ['', Validators.required],\r\n      'phone': ['', Validators.required],\r\n      'country': ['', Validators.required],\r\n      'city': ['', Validators.required],\r\n      'state': '',\r\n      'zip': ['', Validators.required],\r\n      'address': ['', Validators.required]\r\n    });\r\n    this.shippingForm = this.formBuilder.group({\r\n      'firstName': ['', Validators.required],\r\n      'lastName': ['', Validators.required],\r\n      'middleName': '',\r\n      'company': '',\r\n      'email': ['', Validators.required],\r\n      'phone': ['', Validators.required],\r\n      'country': ['', Validators.required],\r\n      'city': ['', Validators.required],\r\n      'state': '',\r\n      'zip': ['', Validators.required],\r\n      'address': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  public onBillingFormSubmit(values:Object):void {\r\n    if (this.billingForm.valid) {\r\n      this.snackBar.open('Your billing address information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n  public onShippingFormSubmit(values:Object):void {\r\n    if (this.shippingForm.valid) {\r\n      this.snackBar.open('Your shipping address information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n}\r\n","export default \".flex-wrapper {\\n  margin: 8px -8px;\\n}\\n.flex-wrapper .col {\\n  padding: 8px;\\n}\\n.account-card-content {\\n  height: 134px;\\n}\\n.account-card-content a {\\n  text-decoration: none;\\n}\\n.account-card-content a:hover {\\n  text-decoration: underline;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7QUFDSjtBQUFJO0VBQ0ksWUFBQTtBQUVSO0FBQ0E7RUFDSSxhQUFBO0FBRUo7QUFESTtFQUNJLHFCQUFBO0FBR1I7QUFGUTtFQUNJLDBCQUFBO0FBSVoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmxleC13cmFwcGVye1xyXG4gICAgbWFyZ2luOiA4cHggLThweDtcclxuICAgIC5jb2x7XHJcbiAgICAgICAgcGFkZGluZzogOHB4O1xyXG4gICAgfVxyXG59XHJcbi5hY2NvdW50LWNhcmQtY29udGVudHtcclxuICAgIGhlaWdodDogMTM0cHg7XHJcbiAgICBhe1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvaW5mb3JtYXRpb24vaW5mb3JtYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { emailValidator, matchingPasswords } from '../../../theme/utils/app-validators';\r\n\r\n@Component({\r\n  selector: 'app-information',\r\n  templateUrl: './information.component.html',\r\n  styleUrls: ['./information.component.scss']\r\n})\r\nexport class InformationComponent implements OnInit {\r\n  infoForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  constructor(public formBuilder: FormBuilder, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.infoForm = this.formBuilder.group({\r\n      'firstName': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'lastName': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'email': ['', Validators.compose([Validators.required, emailValidator])]\r\n    });\r\n\r\n    this.passwordForm = this.formBuilder.group({\r\n      'currentPassword': ['', Validators.required],\r\n      'newPassword': ['', Validators.required],\r\n      'confirmNewPassword': ['', Validators.required]\r\n    },{validator: matchingPasswords('newPassword', 'confirmNewPassword')});\r\n  }\r\n\r\n  public onInfoFormSubmit(values:Object):void {\r\n    if (this.infoForm.valid) {\r\n      this.snackBar.open('Your account information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n  public onPasswordFormSubmit(values:Object):void {\r\n    if (this.passwordForm.valid) {\r\n      this.snackBar.open('Your password changed successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n}\r\n","export default \".orders-table.mat-table {\\n  display: block;\\n  overflow-x: auto;\\n}\\n.orders-table.mat-table .mat-row, .orders-table.mat-table .mat-header-row {\\n  display: flex;\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  align-items: center;\\n  min-height: 48px;\\n  padding: 0 24px;\\n  min-width: 870px;\\n}\\n.orders-table.mat-table .mat-cell, .orders-table.mat-table .mat-header-cell {\\n  flex: 1;\\n  overflow: hidden;\\n  word-wrap: break-word;\\n}\\n.orders-table.mat-table .mat-header-cell {\\n  font-size: 14px;\\n}\\n.orders-table.mat-table .mat-cell .order {\\n  color: inherit;\\n  text-decoration: none;\\n  font-weight: 500;\\n}\\n.orders-table.mat-table .mat-cell .btn-invoice {\\n  margin-left: 8px;\\n}\\n.orders-table.mat-table .mat-cell .actions {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9vcmRlcnMvb3JkZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGdCQUFBO0FBQ0o7QUFBSTtFQUNJLGFBQUE7RUFDQSx3QkFBQTtFQUNBLDBCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQUVSO0FBQUk7RUFDSSxPQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQUVSO0FBQUk7RUFDSSxlQUFBO0FBRVI7QUFDUTtFQUNJLGNBQUE7RUFDQSxxQkFBQTtFQUNBLGdCQUFBO0FBQ1o7QUFDUTtFQUNJLGdCQUFBO0FBQ1o7QUFDUTtFQUNJLGlCQUFBO0FBQ1oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L29yZGVycy9vcmRlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIub3JkZXJzLXRhYmxlLm1hdC10YWJsZSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG92ZXJmbG93LXg6YXV0bztcclxuICAgIC5tYXQtcm93LCAubWF0LWhlYWRlci1yb3cge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4O1xyXG4gICAgICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgbWluLWhlaWdodDogNDhweDtcclxuICAgICAgICBwYWRkaW5nOiAwIDI0cHg7XHJcbiAgICAgICAgbWluLXdpZHRoOiA4NzBweDtcclxuICAgIH1cclxuICAgIC5tYXQtY2VsbCwgLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgICAgICAgZmxleDogMTtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgIH1cclxuICAgIC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIH1cclxuICAgIC5tYXQtY2VsbHtcclxuICAgICAgICAub3JkZXJ7XHJcbiAgICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5idG4taW52b2ljZXtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmFjdGlvbnN7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n  public orders = [\r\n    { number: '#3258', date: 'March 29, 2018', status: 'Completed', total: '$140.00 for 2 items', invoice: true },\r\n    { number: '#3145', date: 'February 14, 2018', status: 'On hold', total: '$255.99 for 1 item', invoice: false },\r\n    { number: '#2972', date: 'January 7, 2018', status: 'Processing', total: '$255.99 for 1 item', invoice: true },\r\n    { number: '#2971', date: 'January 5, 2018', status: 'Completed', total: '$73.00 for 1 item', invoice: true },\r\n    { number: '#1981', date: 'December 24, 2017', status: 'Pending Payment', total: '$285.00 for 2 items', invoice: false },\r\n    { number: '#1781', date: 'September 3, 2017', status: 'Refunded', total: '$49.00 for 2 items', invoice: false }\r\n  ]\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"]}