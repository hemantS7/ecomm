{"version":3,"sources":["webpack:///src/app/pages/brands/brand/brand.component.html","webpack:///src/app/pages/brands/brands.component.html","webpack:///src/app/pages/brands/brand/brand.component.scss","webpack:///src/app/pages/brands/brand/brand.component.ts","webpack:///src/app/pages/brands/brands.component.scss","webpack:///src/app/pages/brands/brands.component.ts","webpack:///src/app/pages/brands/brands.module.ts"],"names":["BrandComponent","appSettings","activatedRoute","appService","dialog","router","sidenavOpen","viewType","viewCol","counts","sortings","products","brands","priceFrom","priceTo","colors","sizes","settings","count","sort","sub","params","subscribe","window","innerWidth","getCategories","getAllProducts","getProducts","data","index","concat","Data","categories","length","unsubscribe","product","dialogRef","open","panelClass","direction","rtl","afterClosed","navigate","id","name","event","page","scrollTo","target","innerText","toLowerCase","selector","template","BrandsComponent","letters","getBrands","routes","path","component","pathMatch","BrandsModule","imports","forChild","declarations"],"mappings":"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","file":"pages-brands-brands-module-es5.js","sourcesContent":["export default \"<mat-sidenav-container>\\r\\n    <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"filter-sidenav\\\" perfectScrollbar>\\r\\n        \\r\\n        <mat-accordion displayMode=\\\"flat\\\" multi=\\\"true\\\">\\r\\n            <mat-expansion-panel expanded>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        <h4>Categories</h4>\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div class=\\\"categories-wrapper categories-dropdown\\\" perfectScrollbar>\\r\\n                    <app-category-list [categories]=\\\"categories\\\" [categoryParentId]=\\\"0\\\" (change)=\\\"onChangeCategory($event)\\\"></app-category-list>\\r\\n                </div>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel expanded>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        <h4>Price</h4>\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"text-muted\\\">\\r\\n                    <span>From: <b>${{priceFrom}}</b></span>\\r\\n                    <span>To: <b>${{priceTo}}</b></span>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"filter-price\\\">\\r\\n                    <mat-slider color=\\\"primary\\\" max=\\\"2000\\\" min=\\\"1\\\" thumb-label=\\\"true\\\" [(ngModel)]=\\\"priceFrom\\\"></mat-slider>\\r\\n                    <mat-slider color=\\\"warn\\\" max=\\\"2000\\\" min=\\\"1\\\" thumb-label=\\\"true\\\" [(ngModel)]=\\\"priceTo\\\"></mat-slider>\\r\\n                </div>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel expanded>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        <h4>Color</h4>\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"filter-buttons\\\">\\r\\n                    <button mat-raised-button *ngFor=\\\"let color of colors\\\" [style.background]=\\\"color\\\">&nbsp;</button>\\r\\n                </div>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel expanded>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        <h4>Size</h4>\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"filter-buttons\\\">\\r\\n                    <button mat-raised-button *ngFor=\\\"let size of sizes\\\">{{size}}</button>\\r\\n                </div>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel expanded>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        <h4>Condition</h4>\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div fxLayout=\\\"column\\\">\\r\\n                    <mat-checkbox color=\\\"primary\\\">New</mat-checkbox>\\r\\n                    <mat-checkbox color=\\\"primary\\\">Used</mat-checkbox>\\r\\n                    <mat-checkbox color=\\\"primary\\\">Not Specified</mat-checkbox>\\r\\n                </div>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel expanded>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        <h4>Now starting at $1379</h4>\\r\\n                    </mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                   <a [routerLink]=\\\"['/products/electronics']\\\"><img src=\\\"assets/images/products/probook/2-medium.png\\\" alt=\\\"\\\" class=\\\"mw-100\\\"></a>\\r\\n                </div>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n        </mat-accordion>\\r\\n\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content class=\\\"all-products\\\" ngClass.gt-sm=\\\"p-left\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"filter-row mat-elevation-z1 text-muted\\\">\\r\\n            <button *ngIf=\\\"!sidenavOpen\\\" mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                <mat-icon>more_vert</mat-icon>\\r\\n            </button>\\r\\n            <div>\\r\\n                <a mat-button [matMenuTriggerFor]=\\\"sortMenu\\\" #sortMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n                    {{sort}}<mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n                </a>\\r\\n                <mat-menu #sortMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" class=\\\"app-dropdown\\\" overlapTrigger=\\\"true\\\">\\r\\n                    <span (mouseleave)=\\\"sortMenuTrigger.closeMenu()\\\">\\r\\n                        <button mat-menu-item *ngFor=\\\"let sort of sortings\\\" (click)=\\\"changeSorting(sort)\\\">\\r\\n                            <span>{{sort}}</span>\\r\\n                        </button>\\r\\n                    </span>\\r\\n                </mat-menu>\\r\\n            </div>\\r\\n            <div>\\r\\n                <a mat-button [matMenuTriggerFor]=\\\"countsMenu\\\" #countsMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n                    Show {{count}}<mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n                </a>\\r\\n                <mat-menu #countsMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" class=\\\"app-dropdown\\\" overlapTrigger=\\\"true\\\">\\r\\n                    <span (mouseleave)=\\\"countsMenuTrigger.closeMenu()\\\">\\r\\n                        <button mat-menu-item *ngFor=\\\"let count of counts\\\" (click)=\\\"changeCount(count)\\\">\\r\\n                            <span>{{count}}</span>\\r\\n                        </button>\\r\\n                    </span>\\r\\n                </mat-menu>\\r\\n                <button mat-icon-button (click)=\\\"changeViewType('list', 100)\\\">\\r\\n                    <mat-icon>view_list</mat-icon>\\r\\n                </button>\\r\\n                <button mat-icon-button (click)=\\\"changeViewType('grid', 33.3)\\\">\\r\\n                    <mat-icon>view_module</mat-icon>\\r\\n                </button>\\r\\n                <button mat-icon-button (click)=\\\"changeViewType('grid', 25)\\\">\\r\\n                    <mat-icon>view_comfy</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"viewType == 'grid'\\\" fxLayout=\\\"row wrap\\\" class=\\\"products-wrapper\\\">\\r\\n            <div *ngFor=\\\"let product of products | paginate: { itemsPerPage: count, currentPage: page }\\\" fxFlex=\\\"100\\\" [fxFlex.gt-sm]=\\\"viewCol\\\" fxFlex.sm=\\\"50\\\" class=\\\"col\\\">\\r\\n                <mat-card class=\\\"product-item text-center\\\">\\r\\n                    <mat-chip-list *ngIf=\\\"product.discount\\\">\\r\\n                        <mat-chip color=\\\"warn\\\" selected=\\\"true\\\">{{product.discount}}% OFF</mat-chip>\\r\\n                    </mat-chip-list>\\r\\n                    <a [routerLink]=\\\"['/products', product.id, product.name]\\\" class=\\\"image-link\\\">\\r\\n                        <img [src]=\\\"product.images[0].medium\\\" alt=\\\"\\\">\\r\\n                    </a>\\r\\n                    <h4 class=\\\"category text-muted\\\">{{ ( appService.Data.categories | filterById : product.categoryId )?.name }}</h4>                                                                     \\r\\n                    <a [routerLink]=\\\"['/products', product.id, product.name]\\\" class=\\\"title text-truncate\\\">\\r\\n                        {{product.name}}\\r\\n                    </a>\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"prices\\\">\\r\\n                        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n                            <p class=\\\"old-price text-muted\\\"><span *ngIf=\\\"product.oldPrice\\\">${{product.oldPrice | number : '1.2-2'}}</span></p>\\r\\n                            <p class=\\\"new-price\\\">${{product.newPrice | number : '1.2-2'}}</p>\\r\\n                        </div>\\r\\n                        <app-rating [ratingsCount]=\\\"product.ratingsCount\\\" [ratingsValue]=\\\"product.ratingsValue\\\" [direction]=\\\"'column'\\\"></app-rating>\\r\\n                    </div>                            \\r\\n                    <div class=\\\"divider\\\"></div>\\r\\n                    <div class=\\\"icons\\\">\\r\\n                        <app-controls [product]=\\\"product\\\" (onOpenProductDialog)=\\\"openProductDialog(product)\\\"></app-controls>\\r\\n                    </div>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"viewType == 'list'\\\" fxLayout=\\\"row wrap\\\" class=\\\"products-wrapper\\\">\\r\\n            <div  *ngFor=\\\"let product of products | paginate: { itemsPerPage: count, currentPage: page }\\\" fxFlex=\\\"100\\\" class=\\\"col\\\">\\r\\n                <mat-card class=\\\"product-item\\\">\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"p-2\\\">\\r\\n                            <mat-chip-list *ngIf=\\\"product.discount\\\" class=\\\"list-view\\\">\\r\\n                                <mat-chip color=\\\"warn\\\" selected=\\\"true\\\">{{product.discount}}% OFF</mat-chip>\\r\\n                            </mat-chip-list>\\r\\n                            <a [routerLink]=\\\"['/products', product.id, product.name]\\\" class=\\\"image-link\\\">\\r\\n                                <img [src]=\\\"product.images[0].medium\\\" alt=\\\"\\\">\\r\\n                            </a>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"p-2\\\">\\r\\n                            <h4 class=\\\"category text-muted\\\">{{ ( appService.Data.categories | filterById : product.categoryId )?.name }}</h4>                                                                     \\r\\n                            <a [routerLink]=\\\"['/products', product.id, product.name]\\\" class=\\\"title\\\">\\r\\n                                {{product.name}}\\r\\n                            </a>\\r\\n                            <p class=\\\"py-1 text-muted lh\\\">{{product.description}}</p>\\r\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"prices\\\">\\r\\n                                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n                                    <p class=\\\"old-price text-muted\\\"><span *ngIf=\\\"product.oldPrice\\\">${{product.oldPrice | number : '1.2-2'}}</span></p>\\r\\n                                    <p class=\\\"new-price\\\">${{product.newPrice | number : '1.2-2'}}</p>\\r\\n                                </div>\\r\\n                                <app-rating [ratingsCount]=\\\"product.ratingsCount\\\" [ratingsValue]=\\\"product.ratingsValue\\\" [direction]=\\\"'column'\\\"></app-rating>\\r\\n                            </div>                            \\r\\n                            <div class=\\\"divider\\\"></div>\\r\\n                            <div class=\\\"icons\\\">\\r\\n                                <app-controls [product]=\\\"product\\\" (onOpenProductDialog)=\\\"openProductDialog(product)\\\"></app-controls>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"products.length > 0\\\" fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\"> \\r\\n                <mat-card class=\\\"p-0 text-center\\\">           \\r\\n                    <pagination-controls class=\\\"product-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"5\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\";","export default \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch\\\">\\r\\n    <h3 class=\\\"py-1 text-center\\\">We've Got The Brands You're Looking For</h3>    \\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <mat-form-field  fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"w-100 brand-search\\\">\\r\\n            <input matInput placeholder=\\\"Search For Brands...\\\" [(ngModel)]=\\\"searchText\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" appearance=\\\"legacy\\\" value=\\\"all\\\" class=\\\"letters mt-2\\\">\\r\\n            <mat-button-toggle value=\\\"all\\\" class=\\\"letter\\\">\\r\\n              Show All Brands\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle *ngFor=\\\"let letter of letters\\\" [value]=\\\"letter\\\" class=\\\"letter\\\">\\r\\n              {{letter}}\\r\\n            </mat-button-toggle>\\r\\n        </mat-button-toggle-group>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"brands-container\\\">\\r\\n    <div class=\\\"brand-block text-center\\\" *ngFor=\\\"let brand of brands | brandSearchPipe : searchText  | filterBrands: group.value\\\">\\r\\n        <a [routerLink]=\\\"['/brands', brand.name]\\\" class=\\\"brand mat-elevation-z3\\\">\\r\\n            <img [src]=\\\"brand.image\\\">\\r\\n        </a>\\r\\n    </div>\\r\\n</div>\";","export default \".filter-sidenav {\\n  width: 280px;\\n  border: 0 !important;\\n}\\n.filter-sidenav .mat-expansion-panel-header-title {\\n  text-transform: uppercase;\\n}\\n.filter-row {\\n  background: #fff;\\n  padding: 8px 12px;\\n}\\n.all-products {\\n  min-height: 400px;\\n  padding: 2px;\\n  overflow: hidden;\\n}\\n.all-products.p-left {\\n  padding-left: 16px;\\n}\\n.products-wrapper {\\n  margin: 8px -8px;\\n}\\n.products-wrapper .col {\\n  padding: 8px;\\n}\\n.categories-wrapper {\\n  position: relative;\\n  max-height: 300px;\\n}\\n.filter-buttons button {\\n  min-width: 36px;\\n  margin: 0 6px 10px 0;\\n  padding: 0;\\n}\\n.filter-price .mat-slider-horizontal {\\n  min-width: 110px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYnJhbmRzL2JyYW5kL2JyYW5kLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLG9CQUFBO0FBQ0o7QUFBSTtFQUNJLHlCQUFBO0FBRVI7QUFDQTtFQUNJLGdCQUFBO0VBQ0EsaUJBQUE7QUFFSjtBQUFBO0VBQ0ksaUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUFHSjtBQUZJO0VBQ0ksa0JBQUE7QUFJUjtBQUFBO0VBQ0ksZ0JBQUE7QUFHSjtBQUZJO0VBQ0ksWUFBQTtBQUlSO0FBQUE7RUFDSSxrQkFBQTtFQUNBLGlCQUFBO0FBR0o7QUFDSTtFQUNJLGVBQUE7RUFDQSxvQkFBQTtFQUNBLFVBQUE7QUFFUjtBQUdJO0VBQ0ksZ0JBQUE7QUFBUiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JyYW5kcy9icmFuZC9icmFuZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWx0ZXItc2lkZW5hdntcclxuICAgIHdpZHRoOiAyODBweDtcclxuICAgIGJvcmRlcjogMCAhaW1wb3J0YW50O1xyXG4gICAgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLXRpdGxlIHtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgfVxyXG59XHJcbi5maWx0ZXItcm93e1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIHBhZGRpbmc6IDhweCAxMnB4O1xyXG59XHJcbi5hbGwtcHJvZHVjdHN7XHJcbiAgICBtaW4taGVpZ2h0OiA0MDBweDtcclxuICAgIHBhZGRpbmc6IDJweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAmLnAtbGVmdHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE2cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5wcm9kdWN0cy13cmFwcGVye1xyXG4gICAgbWFyZ2luOiA4cHggLThweDtcclxuICAgIC5jb2x7XHJcbiAgICAgICAgcGFkZGluZzogOHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uY2F0ZWdvcmllcy13cmFwcGVye1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWF4LWhlaWdodDogMzAwcHg7XHJcbn1cclxuXHJcbi5maWx0ZXItYnV0dG9uc3tcclxuICAgIGJ1dHRvbntcclxuICAgICAgICBtaW4td2lkdGg6IDM2cHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIDZweCAxMHB4IDA7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgIH1cclxufVxyXG5cclxuLmZpbHRlci1wcmljZXtcclxuICAgIC5tYXQtc2xpZGVyLWhvcml6b250YWx7XHJcbiAgICAgICAgbWluLXdpZHRoOiAxMTBweDtcclxuICAgIH1cclxufSJdfQ== */\";","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ProductDialogComponent } from '../../../shared/products-carousel/product-dialog/product-dialog.component';\r\nimport { AppService } from '../../../app.service';\r\nimport { Product, Category } from \"../../../app.models\";\r\nimport { Settings, AppSettings } from 'src/app/app.settings';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brand.component.html',\r\n  styleUrls: ['./brand.component.scss']\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  @ViewChild('sidenav', { static: true }) sidenav: any;\r\n  public sidenavOpen:boolean = true;\r\n  private sub: any;\r\n  public viewType: string = 'grid';\r\n  public viewCol: number = 25;\r\n  public counts = [12, 24, 36];\r\n  public count:any;\r\n  public sortings = ['Sort by Default', 'Best match', 'Lowest first', 'Highest first'];\r\n  public sort:any;\r\n  public products: Array<Product> = [];\r\n  public categories:Category[];\r\n  public brands = [];\r\n  public priceFrom: number = 750;\r\n  public priceTo: number = 1599;\r\n  public colors = [\"#5C6BC0\",\"#66BB6A\",\"#EF5350\",\"#BA68C8\",\"#FF4081\",\"#9575CD\",\"#90CAF9\",\"#B2DFDB\",\"#DCE775\",\"#FFD740\",\"#00E676\",\"#FBC02D\",\"#FF7043\",\"#F5F5F5\",\"#000000\"];\r\n  public sizes = [\"S\",\"M\",\"L\",\"XL\",\"2XL\",\"32\",\"36\",\"38\",\"46\",\"52\",\"13.3\\\"\",\"15.4\\\"\",\"17\\\"\",\"21\\\"\",\"23.4\\\"\"];\r\n  public page:any;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, \r\n              private activatedRoute: ActivatedRoute, \r\n              public appService:AppService, \r\n              public dialog: MatDialog, \r\n              private router: Router) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.count = this.counts[0];\r\n    this.sort = this.sortings[0];\r\n    this.sub = this.activatedRoute.params.subscribe(params => {\r\n     // console.log(params['name']);\r\n    });\r\n    if(window.innerWidth < 960){\r\n      this.sidenavOpen = false;\r\n    };\r\n    if(window.innerWidth < 1280){\r\n      this.viewCol = 33.3;\r\n    };\r\n\r\n    this.getCategories();\r\n    this.getAllProducts();  \r\n  }\r\n\r\n  public getAllProducts(){\r\n    this.appService.getProducts(\"brand\").subscribe(data=>{\r\n      this.products = data; \r\n      //for show more product  \r\n      for (var index = 0; index < 3; index++) {\r\n        this.products = this.products.concat(this.products);        \r\n      }\r\n    });\r\n  }\r\n\r\n  public getCategories(){  \r\n    if(this.appService.Data.categories.length == 0) { \r\n      this.appService.getCategories().subscribe(data => {\r\n        this.categories = data;\r\n        this.appService.Data.categories = data;\r\n      });\r\n    }\r\n    else{\r\n      this.categories = this.appService.Data.categories;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n    (window.innerWidth < 1280) ? this.viewCol = 33.3 : this.viewCol = 25;\r\n  }\r\n\r\n  public changeCount(count){\r\n    this.count = count;\r\n    this.getAllProducts(); \r\n  }\r\n\r\n  public changeSorting(sort){\r\n    this.sort = sort;\r\n  }\r\n\r\n  public changeViewType(viewType, viewCol){\r\n    this.viewType = viewType;\r\n    this.viewCol = viewCol;\r\n  }\r\n\r\n  public openProductDialog(product){   \r\n    let dialogRef = this.dialog.open(ProductDialogComponent, {\r\n        data: product,\r\n        panelClass: 'product-dialog',\r\n        direction: (this.settings.rtl) ? 'rtl' : 'ltr'\r\n    });\r\n    dialogRef.afterClosed().subscribe(product => {\r\n      if(product){\r\n        this.router.navigate(['/products', product.id, product.name]); \r\n      }\r\n    });\r\n  }\r\n\r\n  public onPageChanged(event){\r\n      this.page = event;\r\n      this.getAllProducts(); \r\n      window.scrollTo(0,0); \r\n  }\r\n\r\n  public onChangeCategory(event){\r\n    if(event.target){\r\n      this.router.navigate(['/products', event.target.innerText.toLowerCase()]); \r\n    }   \r\n  }\r\n\r\n}","export default \".letters {\\n  display: inline-block !important;\\n  white-space: unset !important;\\n  background: #fff;\\n}\\n\\n.letter {\\n  display: inline-block !important;\\n}\\n\\n.brand-search.mat-form-field {\\n  text-align: center;\\n}\\n\\n.brands-container {\\n  -moz-column-count: 1;\\n       column-count: 1;\\n  -moz-column-gap: 16px;\\n       column-gap: 16px;\\n  margin-top: 30px;\\n}\\n\\n.brands-container .brand-block {\\n  display: block;\\n}\\n\\n.brands-container .brand-block .brand {\\n  background-color: #fff;\\n  padding: 16px;\\n  display: inline-block;\\n  margin: 8px 0;\\n}\\n\\n.brands-container .brand-block .brand img {\\n  max-width: 100%;\\n}\\n\\n@media only screen and (min-width: 320px) {\\n  .brands-container {\\n    -moz-column-count: 2;\\n    column-count: 2;\\n  }\\n}\\n\\n@media only screen and (min-width: 600px) {\\n  .brands-container {\\n    -moz-column-count: 3;\\n    column-count: 3;\\n  }\\n}\\n\\n@media only screen and (min-width: 960px) {\\n  .brands-container {\\n    -moz-column-count: 4;\\n    column-count: 4;\\n  }\\n}\\n\\n@media only screen and (min-width: 1280px) {\\n  .brands-container {\\n    -moz-column-count: 5;\\n    column-count: 5;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYnJhbmRzL2JyYW5kcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdDQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUNBO0VBQ0ksZ0NBQUE7QUFFSjs7QUFDQTtFQUNJLGtCQUFBO0FBRUo7O0FBRUE7RUFDSSxvQkFBQTtPQUFBLGVBQUE7RUFDQSxxQkFBQTtPQUFBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFBSTtFQUNJLGNBQUE7QUFFUjs7QUFEUTtFQUNJLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsYUFBQTtBQUdaOztBQUZZO0VBQ0ksZUFBQTtBQUloQjs7QUFFQTtFQUNJO0lBQ0ksb0JBQUE7SUFFQSxlQUFBO0VBQ047QUFDRjs7QUFFQTtFQUNJO0lBQ0ksb0JBQUE7SUFFQSxlQUFBO0VBQU47QUFDRjs7QUFJQTtFQUNJO0lBQ0ksb0JBQUE7SUFFQSxlQUFBO0VBRk47QUFDRjs7QUFLQTtFQUNJO0lBQ0ksb0JBQUE7SUFFQSxlQUFBO0VBSE47QUFDRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JyYW5kcy9icmFuZHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGV0dGVyc3tcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xyXG4gICAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG59XHJcbi5sZXR0ZXJ7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmJyYW5kLXNlYXJjaC5tYXQtZm9ybS1maWVsZHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuXHJcbi5icmFuZHMtY29udGFpbmVyIHtcclxuICAgIGNvbHVtbi1jb3VudDogMTtcclxuICAgIGNvbHVtbi1nYXA6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgLmJyYW5kLWJsb2Nre1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIC5icmFuZHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgcGFkZGluZzogMTZweDtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBtYXJnaW46IDhweCAwO1xyXG4gICAgICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzIwcHgpIHtcclxuICAgIC5icmFuZHMtY29udGFpbmVyIHtcclxuICAgICAgICAtbW96LWNvbHVtbi1jb3VudDogMjtcclxuICAgICAgICAtd2Via2l0LWNvbHVtbi1jb3VudDogMjtcclxuICAgICAgICBjb2x1bW4tY291bnQ6IDI7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAwcHgpIHtcclxuICAgIC5icmFuZHMtY29udGFpbmVyIHtcclxuICAgICAgICAtbW96LWNvbHVtbi1jb3VudDogMztcclxuICAgICAgICAtd2Via2l0LWNvbHVtbi1jb3VudDogMztcclxuICAgICAgICBjb2x1bW4tY291bnQ6IDM7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk2MHB4KSB7XHJcbiAgICAuYnJhbmRzLWNvbnRhaW5lciB7XHJcbiAgICAgICAgLW1vei1jb2x1bW4tY291bnQ6IDQ7XHJcbiAgICAgICAgLXdlYmtpdC1jb2x1bW4tY291bnQ6IDQ7XHJcbiAgICAgICAgY29sdW1uLWNvdW50OiA0O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyODBweCkge1xyXG4gICAgLmJyYW5kcy1jb250YWluZXIge1xyXG4gICAgICAgIC1tb3otY29sdW1uLWNvdW50OiA1O1xyXG4gICAgICAgIC13ZWJraXQtY29sdW1uLWNvdW50OiA1O1xyXG4gICAgICAgIGNvbHVtbi1jb3VudDogNTtcclxuICAgIH1cclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from '../../app.service';\r\n\r\n@Component({\r\n  selector: 'app-brands',\r\n  templateUrl: './brands.component.html',\r\n  styleUrls: ['./brands.component.scss']\r\n})\r\nexport class BrandsComponent implements OnInit {\r\n  \r\n  public letters = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"V\",\"W\",\"Y\",\"Z\"];\r\n  public brands = [];\r\n  public searchText: string;\r\n\r\n  constructor(public appService:AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.brands = this.appService.getBrands();\r\n    // this.brands.sort((a, b)=>{\r\n    //   if(a.name < b.name) return -1;\r\n    //   if(a.name > b.name) return 1;\r\n    //   return 0;\r\n    // });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { PipesModule } from '../../theme/pipes/pipes.module';\r\nimport { BrandsComponent } from './brands.component';\r\nimport { BrandComponent } from './brand/brand.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: BrandsComponent, pathMatch: 'full' },\r\n  { path: ':name', component: BrandComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    NgxPaginationModule,\r\n    SharedModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [\r\n    BrandsComponent,\r\n    BrandComponent\r\n  ]\r\n})\r\nexport class BrandsModule { }\r\n"]}