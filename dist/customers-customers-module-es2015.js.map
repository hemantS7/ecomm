{"version":3,"sources":["./src/app/admin/customers/customer-dialog/customer-dialog.component.html","./src/app/admin/customers/customers.component.html","./src/app/admin/customers/customer-dialog/customer-dialog.component.scss","./src/app/admin/customers/customer-dialog/customer-dialog.component.ts","./src/app/admin/customers/customers.component.scss","./src/app/admin/customers/customers.component.ts","./src/app/admin/customers/customers.module.ts","./src/app/admin/customers/customers.ts"],"names":[],"mappings":"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","file":"customers-customers-module-es2015.js","sourcesContent":["export default \"<h1 mat-dialog-title>Customer</h1>\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\">\\n    <div mat-dialog-content> \\n        <mat-tab-group class=\\\"tab-content-wrapped\\\">\\n            <mat-tab label=\\\"General Info\\\"> \\n                <div fxLayout=\\\"row wrap\\\" class=\\\"mt-2\\\">\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>First name</mat-label>\\n                            <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\n                            <mat-error *ngIf=\\\"form.controls.firstName.errors?.required\\\">First name is required</mat-error>   \\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Last name</mat-label>\\n                            <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\n                            <mat-error *ngIf=\\\"form.controls.lastName.errors?.required\\\">Last name is required</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Middle Name/Initial</mat-label>\\n                            <input matInput placeholder=\\\"Middle Name/Initial\\\" formControlName=\\\"middleName\\\">\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Username</mat-label>\\n                            <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" required> \\n                            <mat-error *ngIf=\\\"form.controls.username.errors?.required\\\">Username is required</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Email</mat-label>\\n                            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\"> \\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Store</mat-label>\\n                            <mat-select formControlName=\\\"storeId\\\">\\n                                <mat-option [value]=\\\"\\\">-</mat-option>\\n                                <mat-option *ngFor=\\\"let store of data.stores\\\" [value]=\\\"store.id\\\">\\n                                    <span>{{store.name}}</span>\\n                                </mat-option>\\n                            </mat-select> \\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Wallet Balance ($)</mat-label>\\n                            <input matInput formControlName=\\\"walletBalance\\\">\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                            <mat-label>Revenue ($)</mat-label>\\n                            <input matInput formControlName=\\\"revenue\\\">\\n                        </mat-form-field>\\n                    </div>\\n                </div>  \\n            </mat-tab>\\n            <mat-tab label=\\\"Billing\\\" formGroupName=\\\"billing\\\">\\n                <div fxLayout=\\\"row wrap\\\" class=\\\"mt-2\\\">\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>First name</mat-label>\\n                          <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].firstName.errors?.required\\\">First name is required</mat-error>   \\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Last name</mat-label>\\n                          <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].lastName.errors?.required\\\">Last name is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Middle Name/Initial</mat-label>\\n                          <input matInput placeholder=\\\"Middle Name/Initial\\\" formControlName=\\\"middleName\\\">\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Company</mat-label>\\n                          <input matInput placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Email</mat-label>\\n                          <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].email.errors?.required\\\">Email is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Phone</mat-label>\\n                          <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].phone.errors?.required\\\">Phone is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Country</mat-label>\\n                            <mat-select placeholder=\\\"Country\\\" formControlName=\\\"country\\\" required [compareWith]=\\\"compareFunction\\\">\\n                                <mat-option [value]=\\\"\\\">-</mat-option>\\n                                <mat-option *ngFor=\\\"let country of data.countries\\\" [value]=\\\"country\\\">\\n                                    {{country.name}}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"form.get('billing')['controls'].country.errors?.required\\\">Country is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>City</mat-label>\\n                          <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].city.errors?.required\\\">City is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>State/Province</mat-label>\\n                          <input matInput placeholder=\\\"State/Province\\\" formControlName=\\\"state\\\">\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Zip/Postal Code</mat-label>\\n                          <input matInput placeholder=\\\"Zip/Postal Code\\\" formControlName=\\\"zip\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].zip.errors?.required\\\">Zip/Postal Code is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                    <div fxFlex=\\\"100\\\" class=\\\"px-1\\\">\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                          <mat-label>Address</mat-label>\\n                          <input matInput placeholder=\\\"Address (street, apartment, suite, unit etc.)\\\" formControlName=\\\"address\\\" required>\\n                          <mat-error *ngIf=\\\"form.get('billing')['controls'].address.errors?.required\\\">Address is required</mat-error>\\n                      </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n        </mat-tab-group> \\n    </div>\\n    <div mat-dialog-actions>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"w-100\\\"> \\n            <button mat-raised-button color=\\\"warn\\\" type=\\\"button\\\" mat-dialog-close>Close</button>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n        </div> \\n    </div>\\n</form>\";","export default \"<div class=\\\"p-1\\\">\\n    <mat-card class=\\\"p-0\\\"> \\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"w-100 p-2\\\">\\n            <h2>Customers List</h2>  \\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openCustomerDialog(null)\\\">Add Customer</button>\\n        </div>\\n        <mat-divider></mat-divider>\\n        <div class=\\\"mat-table admin-table\\\">\\n            <div class=\\\"mat-header-row\\\">\\n                <div class=\\\"mat-header-cell\\\">Full Name</div>\\n                <div class=\\\"mat-header-cell\\\">Username</div> \\n                <div class=\\\"mat-header-cell\\\">Email</div>\\n                <div class=\\\"mat-header-cell\\\">Store</div>\\n                <div class=\\\"mat-header-cell\\\">Wallet Balance</div>\\n                <div class=\\\"mat-header-cell\\\">Revenue</div>\\n                <div class=\\\"mat-header-cell\\\"></div>\\n            </div>\\n            <div *ngFor=\\\"let customer of customers | paginate: { itemsPerPage: count, currentPage: page }\\\" class=\\\"mat-row\\\">\\n                <div class=\\\"mat-cell\\\">{{customer.firstName}} {{customer.lastName}}</div>\\n                <div class=\\\"mat-cell\\\">{{customer.username}}</div>\\n                <div class=\\\"mat-cell\\\">{{customer.email}}</div>\\n                <div class=\\\"mat-cell\\\">{{ ( stores | filterById : customer.storeId )?.name }}</div> \\n                <div class=\\\"mat-cell\\\">${{customer.walletBalance.toFixed(2)}}</div>\\n                <div class=\\\"mat-cell\\\">${{customer.revenue.toFixed(2)}}</div>     \\n                <div class=\\\"mat-cell\\\">\\n                    <div class=\\\"p-1 actions\\\">          \\n                        <button mat-mini-fab color=\\\"primary\\\" matTooltip=\\\"Edit\\\" (click)=\\\"openCustomerDialog(customer)\\\">\\n                            <mat-icon>edit</mat-icon>\\n                        </button>\\n                        <button mat-mini-fab color=\\\"warn\\\" matTooltip=\\\"Delete\\\" class=\\\"mx-1\\\" (click)=\\\"remove(customer)\\\">\\n                            <mat-icon>delete</mat-icon>\\n                        </button>\\n                    </div>\\n                </div>      \\n            </div>\\n        </div>\\n    </mat-card>\\n\\n    <div *ngIf=\\\"customers.length > 0\\\" fxLayout=\\\"row wrap\\\">\\n        <div fxFlex=\\\"100\\\"> \\n            <mat-card class=\\\"p-0 text-center\\\">           \\n                <pagination-controls class=\\\"product-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"5\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2N1c3RvbWVycy9jdXN0b21lci1kaWFsb2cvY3VzdG9tZXItZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-customer-dialog',\n  templateUrl: './customer-dialog.component.html',\n  styleUrls: ['./customer-dialog.component.scss']\n})\nexport class CustomerDialogComponent implements OnInit {\n  public form: FormGroup;\n  constructor(public dialogRef: MatDialogRef<CustomerDialogComponent>, \n              @Inject(MAT_DIALOG_DATA) public data: any,\n              public fb: FormBuilder) { }\n\n  ngOnInit(): void {   \n    this.form = this.fb.group({\n      id: 0, \n      username: ['', Validators.required],\n      email: null,\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      middleName: null,\n      storeId: null,  \n      walletBalance: null, \n      revenue: null,\n      billing: this.fb.group({ \n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        middleName: '',\n        company: '',\n        email: ['', Validators.required],\n        phone: ['', Validators.required],\n        country: ['', Validators.required],\n        city: ['', Validators.required],\n        state: '',\n        zip: ['', Validators.required],\n        address: ['', Validators.required]\n      }) \n    }); \n\n    if(this.data.customer){\n      this.form.patchValue(this.data.customer); \n    };\n  }\n\n  public onSubmit(){\n    console.log(this.form.value);\n    if(this.form.valid){\n      this.dialogRef.close(this.form.value);\n    }\n  }\n\n  public compareFunction(o1: any, o2: any) {\n    return (o1.name == o2.name && o1.code == o2.code);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2N1c3RvbWVycy9jdXN0b21lcnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AppService } from 'src/app/app.service'; \nimport { MatDialog } from '@angular/material/dialog';\nimport { CustomerDialogComponent } from './customer-dialog/customer-dialog.component';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { customers } from './customers';\nimport { AppSettings, Settings } from 'src/app/app.settings';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\nexport class CustomersComponent implements OnInit {\n  public customers = [];\n  public stores = [\n    { id: 1, name: 'Store 1' },\n    { id: 2, name: 'Store 2' }\n  ]\n  public countries = [];\n  public page: any;\n  public count = 6;\n  public settings:Settings;\n  constructor(public appService:AppService, public dialog: MatDialog, public appSettings:AppSettings) {\n    this.settings = this.appSettings.settings;\n  }\n\n  ngOnInit(): void {\n    this.countries = this.appService.getCountries();\n    this.customers = customers; \n  }\n\n  public onPageChanged(event){\n    this.page = event; \n    window.scrollTo(0,0); \n  }\n\n  public openCustomerDialog(data:any){\n    const dialogRef = this.dialog.open(CustomerDialogComponent, {\n      data: {\n        customer: data,\n        stores: this.stores,\n        countries: this.countries\n      },\n      panelClass: ['theme-dialog'],\n      autoFocus: false,\n      direction: (this.settings.rtl) ? 'rtl' : 'ltr' \n    });\n    dialogRef.afterClosed().subscribe(customer => { \n      if(customer){    \n        const index: number = this.customers.findIndex(x => x.id == customer.id);\n        if(index !== -1){\n          this.customers[index] = customer;\n        } \n        else{ \n          let last_customer= this.customers[this.customers.length - 1]; \n          customer.id = last_customer.id + 1;\n          this.customers.push(customer);  \n        }          \n      }\n    });\n  }\n\n  public remove(customer:any){  \n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want remove this customer?\"\n      }\n    }); \n    dialogRef.afterClosed().subscribe(dialogResult => { \n      if(dialogResult){\n        const index: number = this.customers.indexOf(customer);\n        if (index !== -1) {\n          this.customers.splice(index, 1);  \n        } \n      } \n    }); \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { CustomersComponent } from './customers.component';\nimport { CustomerDialogComponent } from './customer-dialog/customer-dialog.component';\n\nexport const routes = [\n  { path: '', component: CustomersComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    CustomerDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    SharedModule,\n    NgxPaginationModule\n  ]\n})\nexport class CustomersModule { }\n","export const customers = [\r\n    { \r\n        id: 1, \r\n        username: 'bruno.v', \r\n        email: 'bruno@company.com', \r\n        firstName: 'Bruno', \r\n        lastName: 'Vespa', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 5255, \r\n        revenue: 3450,\r\n        billing: { \r\n            firstName: 'Bruno', \r\n            lastName: 'Vespa', \r\n            middleName: '',\r\n            company: 'Company 1', \r\n            email: 'bruno@company.com',\r\n            phone: '(415) 231-0332',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 2, \r\n        username: 'andy.79', \r\n        email: 'warhol@gmail.com', \r\n        firstName: 'Andy', \r\n        lastName: 'Warhol', \r\n        middleName: '',\r\n        storeId: 1,  \r\n        walletBalance: 8055, \r\n        revenue: 7200,\r\n        billing: { \r\n            firstName: 'Andy', \r\n            lastName: 'Warhol', \r\n            middleName: '',\r\n            company: 'Company 1', \r\n            email: 'warhol@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 3, \r\n        username: 'pretty', \r\n        email: 'ashley@gmail.com', \r\n        firstName: 'Ashley', \r\n        lastName: 'Ahlberg', \r\n        middleName: '',\r\n        storeId: 1,  \r\n        walletBalance: 17200, \r\n        revenue: 2200,\r\n        billing: { \r\n            firstName: 'Ashley', \r\n            lastName: 'Ahlberg', \r\n            middleName: '',\r\n            company: 'Company 5', \r\n            email: 'ashley@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 4, \r\n        username: 'julia.a', \r\n        email: 'julia@gmail.com', \r\n        firstName: 'Julia', \r\n        lastName: 'Aniston', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 9480, \r\n        revenue: 1470,\r\n        billing: { \r\n            firstName: 'Julia', \r\n            lastName: 'Aniston', \r\n            middleName: '',\r\n            company: 'Company 5', \r\n            email: 'julia@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 5, \r\n        username: 'lusia.m', \r\n        email: 'lusia@gmail.com', \r\n        firstName: 'Lusia', \r\n        lastName: 'Manuel', \r\n        middleName: '',\r\n        storeId: 1,  \r\n        walletBalance: 6200, \r\n        revenue: 3250,\r\n        billing: { \r\n            firstName: 'Lusia', \r\n            lastName: 'Manuel', \r\n            middleName: '',\r\n            company: 'Company 4', \r\n            email: 'lusia@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 6, \r\n        username: 'adam.s', \r\n        email: 'adam@gmail.com', \r\n        firstName: 'Adam', \r\n        lastName: 'Sandler', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 7580, \r\n        revenue: 2950,\r\n        billing: { \r\n            firstName: 'Adam', \r\n            lastName: 'Sandler', \r\n            middleName: '',\r\n            company: 'Company 1', \r\n            email: 'adam@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 7, \r\n        username: 'tereza.s', \r\n        email: 'tereza@gmail.com', \r\n        firstName: 'Tereza', \r\n        lastName: 'Stiles', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 5240, \r\n        revenue: 1095,\r\n        billing: { \r\n            firstName: 'Tereza', \r\n            lastName: 'Stiles', \r\n            middleName: '',\r\n            company: 'Company 3', \r\n            email: 'tereza@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 8, \r\n        username: 'michael.b', \r\n        email: 'michael@gmail.com', \r\n        firstName: 'Michael', \r\n        lastName: 'Blair', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 7340, \r\n        revenue: 4580,\r\n        billing: { \r\n            firstName: 'Michael', \r\n            lastName: 'Blair', \r\n            middleName: '',\r\n            company: 'Company 3', \r\n            email: 'michael@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    }\r\n]"],"sourceRoot":"webpack:///"}