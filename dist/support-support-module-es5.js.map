{"version":3,"sources":["webpack:///src/app/admin/support/support.component.html","webpack:///src/app/admin/support/support.component.scss","webpack:///src/app/admin/support/support.component.ts","webpack:///src/app/admin/support/support.module.ts"],"names":["SupportComponent","dialog","tickets","id","statusId","code","supportCategoryId","issue","order","customer","storeId","date","Date","statuses","name","spportCategories","stores","count","event","page","window","scrollTo","ticket","dialogRef","open","maxWidth","data","title","message","afterClosed","subscribe","dialogResult","index","indexOf","splice","selector","template","routes","path","component","pathMatch","SupportModule","declarations","imports","forChild"],"mappings":"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","file":"support-support-module-es5.js","sourcesContent":["export default \"<div class=\\\"p-1\\\">\\n    <mat-card class=\\\"p-0\\\"> \\n        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"w-100 p-2\\\">\\n            <h2>Support Tickets</h2>   \\n        </div>\\n        <mat-divider></mat-divider>\\n        <div class=\\\"mat-table admin-table\\\">\\n            <div class=\\\"mat-header-row\\\"> \\n                <div class=\\\"mat-header-cell\\\">Ticket</div>\\n                <div class=\\\"mat-header-cell\\\">Category</div>\\n                <div class=\\\"mat-header-cell\\\">Issue</div>\\n                <div class=\\\"mat-header-cell\\\">Item</div>\\n                <div class=\\\"mat-header-cell\\\">Customer</div> \\n                <div class=\\\"mat-header-cell\\\">Store</div>\\n                <div class=\\\"mat-header-cell\\\">Status</div>  \\n                <div class=\\\"mat-header-cell\\\">Date</div>\\n                <div class=\\\"mat-header-cell\\\"></div>\\n            </div>\\n            <div *ngFor=\\\"let ticket of tickets | paginate: { itemsPerPage: count, currentPage: page }\\\" class=\\\"mat-row\\\"> \\n                <div class=\\\"mat-cell\\\">{{ticket.code}}</div> \\n                <div class=\\\"mat-cell\\\">{{ ( spportCategories | filterById : ticket.supportCategoryId )?.name }}</div> \\n                <div class=\\\"mat-cell\\\">{{ticket.issue}}</div>\\n                <div class=\\\"mat-cell\\\">Order {{ticket.order}}</div>\\n                <div class=\\\"mat-cell\\\">{{ticket.customer}}</div> \\n                <div class=\\\"mat-cell\\\">{{ ( stores | filterById : ticket.storeId )?.name }}</div> \\n                <div class=\\\"mat-cell\\\">{{ ( statuses | filterById : ticket.statusId )?.name}}</div> \\n                <div class=\\\"mat-cell\\\">{{ticket.date | date:\\\"dd MMMM, yyyy 'at' HH:mm\\\"}}</div>     \\n                <div class=\\\"mat-cell\\\">\\n                    <div class=\\\"p-1 actions\\\">          \\n                        <button mat-mini-fab color=\\\"primary\\\" matTooltip=\\\"Reply\\\">\\n                            <mat-icon>reply_all</mat-icon>\\n                        </button>\\n                        <button mat-mini-fab color=\\\"warn\\\" matTooltip=\\\"Delete\\\" class=\\\"mx-1\\\" (click)=\\\"remove(ticket)\\\">\\n                            <mat-icon>delete</mat-icon>\\n                        </button>\\n                    </div>\\n                </div>      \\n            </div>\\n        </div>\\n    </mat-card>\\n\\n    <div *ngIf=\\\"tickets.length > 0\\\" fxLayout=\\\"row wrap\\\">\\n        <div fxFlex=\\\"100\\\"> \\n            <mat-card class=\\\"p-0 text-center\\\">           \\n                <pagination-controls class=\\\"product-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"5\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3N1cHBvcnQvc3VwcG9ydC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.scss']\n})\nexport class SupportComponent implements OnInit {\n  public tickets = [\n    { id: 1, statusId: 1, code: '#000625', supportCategoryId: 1, issue: 'lorem ipsum', order: '#1556', customer: 'Andy Warhol', storeId: 1, date: new Date(2020,1,15,10,45) },\n    { id: 2, statusId: 2, code: '#002350', supportCategoryId: 2, issue: 'lorem ipsum', order: '#5214', customer: 'Luisa Styles', storeId: 2, date: new Date(2020,2,8,22,12) },\n    { id: 3, statusId: 3, code: '#007852', supportCategoryId: 3, issue: 'lorem ipsum', order: '#4285', customer: 'Michael Blair', storeId: 2, date: new Date(2020,3,29,14,30) },\n    { id: 4, statusId: 4, code: '#009621', supportCategoryId: 4, issue: 'lorem ipsum', order: '#3658', customer: 'Julia Aniston', storeId: 1, date: new Date(2020,4,18,8,20) }\n  ];\n  public statuses = [\n    { id: 1, name: 'In Progress' },\n    { id: 2, name: 'Pending' },\n    { id: 3, name: 'Solved' },\n    { id: 4, name: 'Closed' } \n  ];\n  public spportCategories = [\n    { id: 1, name: 'Pre-Sale Question' },\n    { id: 2, name: 'Order Question' },\n    { id: 3, name: 'Shipping' },\n    { id: 4, name: 'Product Availability' } \n  ];\n  public stores = [\n    { id: 1, name: 'Store 1' },\n    { id: 2, name: 'Store 2' }\n  ];\n  public page: any;\n  public count = 6;\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  public onPageChanged(event){\n    this.page = event; \n    window.scrollTo(0,0); \n  }\n\n  public remove(ticket:any){  \n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want remove this ticket?\"\n      }\n    }); \n    dialogRef.afterClosed().subscribe(dialogResult => { \n      if(dialogResult){\n        const index: number = this.tickets.indexOf(ticket);\n        if (index !== -1) {\n          this.tickets.splice(index, 1);  \n        } \n      } \n    }); \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router'; \nimport { SharedModule } from '../../shared/shared.module';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SupportComponent } from './support.component';\n\nexport const routes = [\n  { path: '', component: SupportComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    SupportComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes), \n    SharedModule,\n    NgxPaginationModule\n  ]\n})\nexport class SupportModule { }\n"]}